{"version":3,"file":"component_Modal_jsx.app.js","mappingssources":["webpack://project/./component/Modal.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { LoadStorage } from \"../hooks/LoadStorage\";\nimport(\"../css/modal.css\");\n/*const React = require(\"react\");\r\nconst { useState, useEffect} = require(\"react\");\r\nconst { LoadStorage } = require(\"../hooks/LoadStorage\");\r\nrequire(\"../css/modal.css\");*/\n\nconst Modal = _ref => {\n  let {\n    closeModal,\n    selectedDate,\n    setNullSelectedDays\n  } = _ref;\n  //const [dates, setDates] = useState(selectedDate);\n  const [name, setName] = useState(\"\");\n  const {\n    data,\n    saveData\n  } = LoadStorage({\n    initialDataKey: \"userDataAndIndex\"\n  });\n  const userData = data.userData;\n  const currentIndex = data.currentIndex;\n  const colors = [\"#D2D0F7\", \"#B2D4D1\", \"#D9EBD1\", \"#D4CCB2\", \"#DB7093\", \"#A1CCD1\", \"#E9B384\", \"#7C9D96\"];\n\n  //선택된 날짜\n  // useEffect(() => {\n  //   if (selectedDate && selectedDate.length > 0) {\n  //     setDates([...selectedDate]);\n  //   }\n  // }, [selectedDate]);\n\n  // 날짜 포맷화 함수\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    const day = date.getDate();\n    return `${year}. ${month}. ${day}`;\n  };\n  //이름 입력할 때\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n\n  //색상 할당\n  const assignColor = () => {\n    const assignedColor = colors[currentIndex % colors.length];\n    return assignedColor;\n  };\n\n  //제출\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // userData 배열에서 이름이 이미 존재하는지 확인\n    const existingPersonIndex = userData.findIndex(person => person.name === name);\n    // 날짜를 UTC로 변환하여 저장\n    const utcDates = selectedDate.map(date => new Date(date).toISOString());\n    if (existingPersonIndex !== -1) {\n      // 이름이 있으면 업데이트\n      const updatedUserData = [...userData];\n      const existingPerson = updatedUserData[existingPersonIndex];\n      existingPerson.date = [...existingPerson.date, ...selectedDate]; //날짜 추가 !!!!!!!!!!!!!!!!!!!!!\n      saveData({\n        userData: updatedUserData\n      });\n    } else {\n      // 이름이 없으면 새로운 객체 생성\n      const newPerson = {\n        name: name,\n        color: assignColor(),\n        date: utcDates\n      };\n\n      // 새로운 사람 추가\n      saveData({\n        userData: [...userData, newPerson],\n        currentIndex: currentIndex + 1\n      });\n    }\n    closeModal();\n    setNullSelectedDays();\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modalContainer\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"modal\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"modalHead\"\n  }, selectedDate && selectedDate.length === 1 ?\n  /*#__PURE__*/\n  ///////////////!!!!!!!!!!!!!!!!!!\n  React.createElement(\"p\", null, formatDate(selectedDate[0])) : /*#__PURE__*/React.createElement(\"p\", null, formatDate(selectedDate[0]), \" ~ \", formatDate(selectedDate[selectedDate.length - 1])), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"close\",\n    onClick: closeModal\n  }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"modalForm\",\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"modalNameArea\"\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"\\uC774\\uB984 \\uC785\\uB825 \\uD6C4 +\\uB97C \\uB20C\\uB7EC\\uC8FC\\uC138\\uC694 \",\n    value: name,\n    onChange: handleNameChange\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"addBtn\",\n    type: \"submit\"\n  }, \"+\"))));\n};\nexport default Modal;\n//module.exports = Modal;"],"names":[],"sourceRoot":""}